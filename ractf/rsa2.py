n = 1209143407476550975641959824312993703149920344437422193042293131572745298662696284279928622412441255652391493241414170537319784298367821654726781089600780498369402167443363862621886943970468819656731959468058528787895569936536904387979815183897568006750131879851263753496120098205966442010445601534305483783759226510120860633770814540166419495817666312474484061885435295870436055727722073738662516644186716532891328742452198364825809508602208516407566578212780807
e = 65537
ct = 160351756046014626632673141026748833086143126034111001075584075860494627636766754815200634092742096201860189320699395347502574670704208679018664023949536889363376723787600794918504676242427867800807774670862387733298483839511914715009473656009061046796235858940820071495899010386521409519819379030188065682684213355768


#http://factordb.com/index.php?query=58900433780152059829684181006276669633073820320761216330291745734792546625247

p = 1451323814695021781839523005725924034843304531607353309969655735765940761995733790691864240557850982114482960964812695409707159282971720540888087876163043918340471908002836050676655259014052643021444410020228721946833942255553680321064260804789358283520729364100350411107806411406175857078286228408262445014548412773230021248624993966289608616420159408597536266576809338000435146751948031623127586432580684134476360715284410436772894695322035122631454903282483547137021713846401562896681137384569637541978265540452122108572725669356981113655577351807999670261572665887733701428823392872321952547836215653349643083004802791672737860797
q = 2^3 * (7 * 505949)
from pwn import *

def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m


totient = (p - 1) * (q - 1)
d = modinv(e,totient)
m = pow(ct, d, n)

flag = unhex(hex(m)[2:])
print('unhex it: '+flag.decode())
